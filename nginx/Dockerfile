FROM nginx:alpine

# Pull args out of docker-compose.yml
ARG domain
# ARG response

COPY ["./nginx.conf", "./conf.d/", "./etc/nginx/"]
# COPY ./default.conf /etc/nginx/conf.d/default.conf
# RUN sed -i -e "s,TARGET_DOMAIN,$domain,g;s,ROOT_RESPONSE,$response,g" /etc/nginx/template.conf && mv /etc/nginx/template.conf /etc/nginx/nginx.conf

RUN echo "üì• Installing dependencies" \
	apk update && apk upgrade \
	&& apk add --no-cache --no-progress \
	bash \
	openssl \
	git \
	certbot \
	&& echo "üõ† Preparing certbot webroot" \
	&& mkdir -p /var/lib/certbot \
	&& echo "üìù Generating initial self-signed certificate" \
	# && mkdir -p /etc/nginx/ssl/$domain \
	&& mkdir -p /etc/letsencrypt/live/$domain/ \
	&& openssl req -x509 -nodes -newkey rsa:4096 \
	-keyout "/etc/letsencrypt/live/$domain/privkey.pem" \
	-out "/etc/letsencrypt/live/$domain/cert.pem" \
	-subj "/C=/ST=/L=/O=/CN=$domain" \
	# -keyout "/etc/nginx/ssl/$domain/privkey.pem" \
	# -out "/etc/nginx/ssl/$domain/fullchain.pem" \
	# -subj "/C=/ST=/L=/O=/CN=$domain" \
	&& ln -sf /etc/nginx/ssl/$domain /etc/nginx/ssl/latest
# && ln -sf /data/certs/$domain /etc/letsencrypt/live/$domain

# üõ°
# COPY ["./certbot.sh", "../.env", "/"]
# RUN bash -c "bash /certbot.sh"
COPY certbot.sh /
