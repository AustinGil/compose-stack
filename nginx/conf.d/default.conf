server {
	listen      80      				default_server;
	listen [::]:80      				default_server;

	# Allow requests for letsencrypt to do it's thang
	location ^~ /.well-known {
		allow all;
		root /var/lib/certbot/;
	}


	location / {
		# Pass traffic on to node
		# change this to redirect after SSL key is provided
        proxy_pass http://node:3000;

		# Forward all other requests to https
		# rewrite ^ https://$host$request_uri? permanent;
	}
}

server {
    listen 443          				ssl http2 default_server;
    listen [::]:443     				ssl http2 default_server;

	# Don't tell nginx version to clients.
	server_tokens       				off;

	# Security headers
	add_header          				Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header 							X-XSS-Protection "1; mode=block" always;
	add_header 							X-Content-Type-Options "nosniff" always;
	add_header 							X-Frame-Options "DENY" always;

	# Content Security Policy
	add_header 							Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
	add_header 							Referrer-Policy "strict-origin-when-cross-origin" always;

	# Optimize session cache
    ssl_session_cache   				shared:SSL:20m;
	ssl_session_timeout 				10m;

	# Use only TLS
    ssl_protocols       				TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers 			on;
    ssl_ciphers 						"ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

	# Enable OCSP stapling
	ssl_stapling              			on;
	ssl_stapling_verify       			on;
	resolver                  			8.8.8.8 8.8.4.4;

    ssl_certificate             		/certs/latest/fullchain.pem;
    ssl_certificate_key         		/certs/latest/privkey.pem;

    location / {
		# Pass traffic on to node
        proxy_pass http://node:3000;
	}

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
