# https://bjornjohansen.no/redirect-to-https-with-nginx
# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     server_name _;
#     return 301 https://$host$request_uri;
# }
server {
	listen      80 default_server;
	listen [::]:80 default_server;

	# Allow requests for letsencrypt to do it's thang
	location ^~ /.well-known {
		allow all;
		root /var/lib/certbot/;
	}

	# Forward all other requests to https
	location / {
		# rewrite ^ https://$host$request_uri? permanent;
		return 200 'default config!';
	}
}

server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;

    server_name _;

	# Don't tell nginx version to clients.
	server_tokens 						off;

	location ^~ /.well-known {
		allow all;
		root /var/lib/certbot/;
	}

	# Security headers
	add_header                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	# add_header 								X-XSS-Protection "1; mode=block" always;
	# add_header 								X-Content-Type-Options "nosniff" always;
	# add_header 								X-Frame-Options "DENY" always;
	# #CSP
	# add_header 								Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
	# add_header 								Referrer-Policy "strict-origin-when-cross-origin" always;

    ssl_certificate             ssl/latest/fullchain.pem;
    ssl_certificate_key         ssl/latest/privkey.pem;
    # ssl_certificate           /etc/letsencrypt/live/e.matryx.ai/cert.pem;
	# ssl_certificate_key       /etc/letsencrypt/live/e.matryx.ai/privkey.pem;

    # https://blog.qualys.com/ssllabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_prefer_server_ciphers on;
    #ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    # ssl_session_cache         shared:SSL:20m;
	# ssl_session_timeout       10m;

	# ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	# ssl_prefer_server_ciphers on;
	# ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

	# ssl_stapling              on;
	# ssl_stapling_verify       on;
	# resolver                  8.8.8.8 8.8.4.4;

    # default location doing ssl termination.
    # forwards to an upstream host on the docker network http://$host:80
    # location / {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection $http_connection;
    #     #proxy_http_version 1.1;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Https-Protocol $ssl_protocol;

    #     resolver 127.0.0.11; # use docker-internal dns
    #     proxy_pass http://$host:80;
    # }
    location / {
		return 200 "All good!";
	}

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
