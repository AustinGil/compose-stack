user nginx;

# Set number of worker processes automatically based on number of CPU cores.
# worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
# pcre_jit on;

# Specify where the PID of nginx will be written
# pid /nginx.pid;

# Run in foreground
# daemon off;

# Configures default error logger.
# error_log /var/log/nginx/error.log warn;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. Set to 0 to disable.
	# client_max_body_size 1m;

	# Timeout for keep-alive connections.
	# keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	# sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	# tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;

	# Enable gzipping of responses.
	# gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	# gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;

	# Specifies the main log format.
	# log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	# 		'$status $body_bytes_sent "$http_referer" '
	# 		'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	# access_log /var/log/nginx/access.log main;

	# Config for port 80 (http)
	server {
    listen      80;
    listen [::]:80;

		# Allow requests for letsencrypt to do it's thang
    location ^~ /.well-known {
			allow all;
			root  /data/letsencrypt/;
    }

		# Forward all other requests to https
    location / {
			rewrite ^ https://$host$request_uri? permanent;
    }
	}

	# Config for port 443 (https)
	server {
    server_name               TARGET_DOMAIN; # DO NOT CHANGE
    listen      443           ssl http2;
    listen [::]:443           ssl http2;

		# Don't tell nginx version to clients.
		server_tokens 						off;

		# Security headers
    add_header                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
		# add_header 								X-XSS-Protection "1; mode=block" always;
		# add_header 								X-Content-Type-Options "nosniff" always;
		# add_header 								X-Frame-Options "DENY" always;
		# #CSP
		# add_header 								Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
		# add_header 								Referrer-Policy "strict-origin-when-cross-origin" always;

    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_stapling              on;
    ssl_stapling_verify       on;
    resolver                  8.8.8.8 8.8.4.4;

		# Get certs from shared volume
    ssl_certificate           /data/certs/TARGET_DOMAIN/cert.pem;
    ssl_certificate_key       /data/certs/TARGET_DOMAIN/privkey.pem;
    ssl_trusted_certificate   /data/certs/TARGET_DOMAIN/chain.pem;

		location / {
			ROOT_RESPONSE; # DO NOT CHANGE
		}

    # root /usr/share/nginx/html;
    # index index.html;
	}
}
